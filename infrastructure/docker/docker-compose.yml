services:
  postgres:
    image: postgres:15-alpine
    container_name: irp-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-irp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-irp_pass}
      POSTGRES_DB: ${POSTGRES_DB:-irp_db}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ../../data/postgres:/var/lib/postgresql/data
      - ../postgres/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-irp_user} -d ${POSTGRES_DB:-irp_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - irp-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: irp-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ../../data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - irp-network
    restart: unless-stopped

  app:
    build:
      context: ../..
      dockerfile: infrastructure/dockerfiles/Dockerfile.app
    container_name: irp-app
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-irp_user}:${POSTGRES_PASSWORD:-irp_pass}@postgres:5432/${POSTGRES_DB:-irp_db}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_KEY=${API_KEY}
    volumes:
      - ../../src:/app/src
      - ../../config:/app/config
      - ../../logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - irp-network
    restart: unless-stopped

  celery-worker:
    build:
      context: ../..
      dockerfile: infrastructure/dockerfiles/Dockerfile.worker
    container_name: irp-worker 
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-irp_user}:${POSTGRES_PASSWORD:-irp_pass}@postgres:5432/${POSTGRES_DB:-irp_db}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY:-4}
      - MOODY_API_BASE_URL=http://irp-mock-moodys:8001/mock
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ../../src:/app/src
      - ../../logs:/app/logs
    depends_on:
      - postgres
      - redis
      - app
    networks:
      - irp-network
    restart: unless-stopped

  celery-beat:
    build:
      context: ../..
      dockerfile: infrastructure/dockerfiles/Dockerfile.beat
    container_name: irp-beat
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-irp_user}:${POSTGRES_PASSWORD:-irp_pass}@postgres:5432/${POSTGRES_DB:-irp_db}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ../../src:/app/src
      - ../../logs:/app/logs
    depends_on:
      - postgres
      - redis
      - celery-worker
    networks:
      - irp-network
    restart: unless-stopped

  flower:
    image: mher/flower:2.0
    container_name: irp-flower
    command: celery flower --broker=redis://redis:6379/0 --port=5555
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - FLOWER_BASIC_AUTH=${FLOWER_USER:-admin}:${FLOWER_PASSWORD:-admin}
    depends_on:
      - redis
      - celery-worker
    networks:
      - irp-network
    restart: unless-stopped
  moodys:
    build:
      context: ../..
      dockerfile: infrastructure/dockerfiles/Dockerfile.app
    container_name: irp-mock-moodys
    command: uvicorn src.api.endpoints.mock_moodys:app --host 0.0.0.0 --port 8001
    ports:
      - "8001:8001"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - irp-network



networks:
  irp-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: